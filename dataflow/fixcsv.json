{
	"name": "fixcsv",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "sourcecsv",
						"type": "DatasetReference"
					},
					"name": "sourcecsv"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "wwiCampaignAnalytics",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "selectnames"
				},
				{
					"name": "fixrevenueandrevenuetarget"
				},
				{
					"name": "drop"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as string,",
				"          Column_6 as double,",
				"          Column_7 as string,",
				"          Column_8 as double,",
				"          Column_9 as string,",
				"          Column_10 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     skipLines: 1) ~> sourcecsv",
				"sourcecsv select(mapColumn(",
				"          Region = Column_1,",
				"          Country = Column_2,",
				"          ProductCategory = Column_3,",
				"          CampaignName = Column_4,",
				"          RevenuePart1 = Column_5,",
				"          Revenue = Column_6,",
				"          RevenueTargetPart1 = Column_7,",
				"          RevenueTarget = Column_8,",
				"          City = Column_9,",
				"          State = Column_10",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectnames",
				"selectnames derive(Revenue = toDecimal(replace(concat(toString(RevenuePart1), toString(Revenue)), '\\\\', ''), 10, 2, '$###,###.##'),",
				"          RevenueTarget = toDecimal(replace(concat(toString(RevenueTargetPart1), toString(RevenueTarget)), '\\\\', ''), 10, 2, '$###,###.##')) ~> fixrevenueandrevenuetarget",
				"fixrevenueandrevenuetarget select(mapColumn(",
				"          Region,",
				"          Country,",
				"          ProductCategory,",
				"          CampaignName,",
				"          Revenue,",
				"          RevenueTarget,",
				"          City,",
				"          State",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> drop",
				"drop sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Region as string,",
				"          Country as string,",
				"          ProductCategory as string,",
				"          CampaignName as string,",
				"          Revenue as decimal(10,2),",
				"          RevenueTarget as decimal(10,2),",
				"          City as string,",
				"          State as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     staged: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          Region,",
				"          Country,",
				"          ProductCategory,",
				"          CampaignName,",
				"          Revenue,",
				"          RevenueTarget,",
				"          City,",
				"          State",
				"     )) ~> sink1"
			]
		}
	}
}